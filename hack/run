#!/bin/bash
set -e

BDIR=`cd $( dirname "${BASH_SOURCE[0]}" ) && cd .. && pwd`
cd ${BDIR}

watch_run() {
    bin/strip "$@"
}

pg_docker_run(){
    docker run --rm --network host -e PGPASSWORD=${PGPASSWORD} -v `pwd`:/var/lib/postgresql/data -v /tmp:/tmp -w /var/lib/postgresql/data postgres:10.3-alpine "${@}"
}

function start(){
    export RUN_MODE=${RUN_MODE:-dev}
    name=$1
    dir=$(echo ${BDIR}/src/*/cmd/${name})
    mainfile=$(echo $dir/*.go)
    [[ $dir == *'*'* ]] && show_help "not found service path ${dir}"
    [[ $mainfile == *'*'* ]] && show_help "not found main package file ${mainfile}"
    case "${name}" in
        collector)
            args=""
            for i in "${@:2}"; do
                args=$args" -arg=$i"
            done
            watch_run -app=${name} run -main=${mainfile} -out=hack/build/${name} -dir=${dir}/../.. -dir=${dir}/../../../libs $args
            ;;
        *)
            watch_run -app=${name} run -main=${mainfile} -out=hack/build/${name} -dir=${dir}/../.. -dir=${dir}/../../../libs -arg="-conf=hack/conf"
            ;;
    esac

}

function database(){
    action=${1/.*/}
    name=${2}
    dump_host=${DATABASE_DUMP_HOST:-localhost}

    echo ${dump_host}
    case "${name}" in
        dump.schema)
            file1=hack/files/database.sql
            PGPASSWORD=comunion2020 pg_docker_run pg_dump -h ${dump_host} -p 5432 -U comunion2020 -d comunion -n comunion -O -s -f ${file1}
            cat hack/files/database_additional.sql >> ${file1}
            echo ${file1}

            file=hack/files/database_drop_tables_cascade.sql
            echo "SET search_path = platform;" > ${file}
            PGPASSWORD=comunion2020 pg_docker_run psql -h ${dump_host} -U comunion2020 -d comunion -c "SELECT 'DROP TABLE IF EXISTS \"' || tablename || '\" CASCADE;' FROM pg_tables WHERE schemaname = 'trace' ORDER BY tablename" | grep "DROP TABLE" >> ${file}
            echo ${file}
            ;;
        dump.data)
            file=/tmp/database."`date '+%Y-%m-%d-%H:%M:%S'`".sql
            PGPASSWORD=comunion2020 pg_docker_run pg_dump -h ${dump_host} -p 5432 -U comunion2020 -d comunion -n comunion -O -a -f ${file}
            echo ${file}
            ;;
        init)
            # todo get test data from dev db
            docker-compose -f docker-compose-devel.yaml down
            docker-compose -f docker-compose-devel.yaml up -d
            sleep 5
            schema_file=hack/files/database.sql
            data_file=hack/files/test_data.sql
            PGPASSWORD=comunion2020 pg_docker_run psql -h 127.0.0.1 -p 5432 -U comunion2020 -d comunion -f ${schema_file}
            PGPASSWORD=comunion2020 pg_docker_run psql -h 127.0.0.1 -p 5432 -U comunion2020 -d comunion -f ${data_file}
            ;;
        *)
            show_help "no command ${name}"
            ;;
    esac
}

function gen() {
    cd ${BDIR}/hack/gnorm && gnorm gen
}

function show_help(){
    cat <<-EOF
${@}
USAGE: ./hack/run [COMMANDS]

COMMANDS:
    database [PROGRAM]
    start    [app
EOF
    exit 1
}

case "${1}" in
    database)
        database ${1} ${@:2}
        ;;
    start)
        start ${@:2}
        ;;
    gen)
         gen
         ;;
    -h)
        show_help
        ;;
    *)
        show_help "no command ${1}"
        exit 1
        ;;
esac
